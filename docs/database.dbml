// 使用 DBML 描述銀行系統資料庫結構

// 用戶表
Table users {
  id integer [pk, increment] // 主鍵，自動增長
  username varchar [unique, not null] // 用戶名，唯一且不為空
  email varchar [unique, not null] // 電子郵件，唯一且不為空
  hashed_password varchar [not null] // 加密後的密碼
  created_at timestamp [default: `now()`] // 創建時間
  updated_at timestamp // 更新時間
}

// 帳戶表
Table accounts {
  id integer [pk, increment] // 主鍵，自動增長
  user_id integer [not null, ref: > users.id] // 外鍵，關聯到用戶表
  account_number varchar [unique, not null] // 帳號，唯一且不為空
  balance decimal [not null, default: 0] // 餘額，不為空，預設值為 0
  created_at timestamp [default: `now()`] // 創建時間
  updated_at timestamp // 更新時間
}

// 交易表
Table transactions {
  id integer [pk, increment] // 主鍵，自動增長
  from_account_id integer [not null, ref: > accounts.id] // 外鍵，關聯到帳戶表（來源帳戶）
  to_account_id integer [ref: > accounts.id] // 外鍵，關聯到帳戶表（目標帳戶，可為空表示提款）
  amount decimal [not null] // 交易金額
  transaction_type varchar [not null] // 交易類型（存款、提款、轉帳）
  timestamp timestamp [default: `now()`] // 交易時間
  description text // 交易描述
}

// JWT 令牌表（可選，用於管理已發出的令牌）
Table jwt_tokens {
  id integer [pk, increment] // 主鍵，自動增長
  user_id integer [not null, ref: > users.id] // 外鍵，關聯到用戶表
  token text [not null] // JWT 令牌
  expires_at timestamp [not null] // 過期時間
  created_at timestamp [default: `now()`] // 創建時間
}

// 定義關係
Ref: accounts.user_id > users.id // 一個用戶可以有多個帳戶
Ref: transactions.from_account_id > accounts.id // 一個帳戶可以有多個交易（作為來源）
Ref: transactions.to_account_id > accounts.id // 一個帳戶可以有多個交易（作為目標）